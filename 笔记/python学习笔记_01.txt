1、Python是面向对象、解释性、弱类型脚本语言
        缺点：速度慢、源代码加密困难（不像编译性的语言）
2、版本的问题：Python3.0没有兼容Python2.0，推出了Python2.6兼容Python2.0和少量的Python3.0，Python2.7是Python的最后的一个版本
             如果第三方的库使用Python2.0，自己还是使用Python3.0，然后使用Python2.6或Python2.7执行
3、Python源程序执行的方式
 1）python2.7 xxx.py
    python3 xxx.py
  其他解释器：
   CPython    c语言官方发布
   Jython     Java
   IronPython  .NET和Mono
   PyPy  Python实现，支持JIT
 2）交互式：直接在Python的shell中直接输入Python的代码，就会立即的看到Python的代码
           适合于小的语法和小的局部代码  exit()函数退出Python的shell或者ctrl+d
    IPython interactive 交互
      支持自动补全
      支持自动缩进
      支持bash shell
 3)ide方式
    编辑器、解释器、debug、图形界面
 4、python的类型
     数字：numbers
         var1 = 1
         var2 = 2
         删除变量：  del var1[,var2[,var3[....,varN]]]]
                    del [var1]
                    del [var1,var2]
         数字类型：
	                int 
	                long 
	                float
	                complex（复数）3.14j
     字符串：string
		            str = 'hello world'
					print(str)
					print(str[0])
					print(str[2:5]) #输出从第三个到第六个字符串
					print(str[2:])  # 输出从第二个字符串到最尾部的字符串
					print(str * 2) # 输出字符串两次
					print(str + "TEST") # 字符串的拼接
     列表：list
                    list = ['linux','java','python','john','slc']
					tinylist = ['123','111']
					print(list)
					print(list[0])
					print(list[1:3])
					print(list[2:])
					print(list * 2)
					print(list + tinylist)
					print(list[1:4:2]) # 下标为1到4按照步长为2进行访问
					list[0] = tinylist #还可以这么用
     元组：tuple 与列表是差不多的，相当于是一个可读列表
                    tuple = ('slc','python','java')
     字典：dictionary
                    dick = {}
					dick[0] = 'slc'
					dick[2] = 'linux'
					dick[3] = tinydict
					print(dick)
    python的类型转换
       int(x,[base]) 将x转换为一个整数 base是描述参数的进制，存在base的时候，参数的传入的类型为字符串类型
            print("16进制的12转换为十进制的整数为：" + str(int('12', 16)))
			print("int函数传入的参数为0的时候默认值为：" + str(int()))
			print("16进制的a为：" + str(int("0xa",16)))
	   long(x,[base])
	   float(x)
	   complex(real[,image]) 复数
	        print(complex(1, 2))
			print(complex("1+0j"))
			print(complex("1"))
			print(complex(1))
			print(complex("1-2j"))
       str(x)将x转换为字符串 传入的参数可以为任意的对象
            print(str(list))
       repr() 将对象转化为供解释器读取的形式
       eval(str) 计算字符串中有效的Python表达式，并返回一个对象     
                 print(eval("n + pow(2,2)"))
                 print(eval("3 * 4"))
       tuple() 将序列s转换为一个元组 如果传入的参数为一个字典的话，返回的对象为key组成的列表
                 print(tuple(list))
				 dick['hobbies'] = "sing"
				 print(tuple(dick))
	   list(s) 转换为列表
	             aTuple = (123, 'xyz', 'zara', 'abc');
                 aList = list(aTuple)
       set(s)  无序不重复

 5、if
        #!/usr/bin/python
		flag = False
		name = 'slc'
		if name == 'python':
		    flag = True
		else:
		    print(name)
		print("---------------------------")
		num = 5
		if num == 3:
		    print('boss')
		elif num == 2:
		    print('user')
		elif num == 1:
		    print('work')
		elif num <= 1:
		    print('error')
		else:
		    print('roadman')
6、循环
        while循环：

            # 非偶数的时候跳过
			i = 1
			while i < 10:
			    i += 1
			    if i % 2 != 0:
			        continue
			    else:
			        print(i)
			# 大于10跳出循环
			i = 1
			while 1:
			    print(i)
			    i += 1
			    if i > 10:
			        break
        for循环：
            # for循环  遍历字符串和列表
			myList = ['banana', 'apple', 'mango']
			myStr = 'Python'
			for s in myStr:
			    print("当前的字母为：" + str(s))

			for e in myList:
			    print("当前的元素为：" + e)
			# 通过range函数产生的序列进行遍历
			for index in range(len(myList)):
			    print("使用序列进行遍历，当前的元素为：" + myList[index])
			# 使用for循环来得到10到20之间的质数  for和else使用的时候，for循环跳出，执行else
			for i in range(10, 20):
			    for num in range(2, i):
			        if i % num == 0:
			            j = num / i
			            print('%d 等于 %d * %d' % (i, num, j))
			            break
			    else:
			        print("%d 是一个质数" % i)
			# 使用enumerate函数进行遍历
			for i, j in enumerate(myList):
			    print("index: %s,items: %s" % (i, j))
7、pass语句
    pass：表示不做任何的事情，一般作为占位符
    # pass表示占位符  一般用来在def的函数中进行使用，如果定义了一个空的函数，程序会报错
	for letter in 'Python':
	    if letter == 'h':
	        pass
	        print("this is a pass block")
	    print("当前的字母为",letter)
8、


